window.SIDEBAR_ITEMS = {"constant":[["ACCESSIBLE",""],["ATSPI_EVENT",""],["CACHE_ADD",""],["EVENT_LISTENER",""],["QSPI_EVENT",""]],"enum":[["CacheEvents",""],["Event","Encapsulates the various different accessibility bus signal types."],["EventInterfaces","Offers events, grouped-by Interface."],["EventListenerEvents","Covers both `EventListener` events."]],"mod":[["document",""],["focus",""],["keyboard",""],["mouse",""],["object",""],["terminal",""],["window",""]],"struct":[["Accessible","Owned Accessible type Emitted by `CacheRemove` and `Available`"],["AddAccessibleEvent","Type that contains the `zbus::Message` for meta information and the [`crate::cache::CacheItem`]"],["AtspiEvent",""],["AvailableEvent","An event that is emitted when the registry daemon has started."],["EventBody",""],["EventBodyOwned",""],["EventBodyQT",""],["EventListenerDeregisteredEvent","An event that is emitted by the regostry daemon to signal that an event has been deregistered to no longer listen for."],["EventListenerRegisteredEvent","An event that is emitted by the regostry daemon to signal that an event has been registered to listen for."],["EventListeners","Signal type emitted by `EventListenerRegistered` and `EventListenerDeregistered` signals, which belong to the `Registry` interface, implemented by the registry-daemon."],["RemoveAccessibleEvent",""]],"trait":[["GenericEvent","Shared behavior of bus `Signal` events."],["HasMatchRule",""],["HasRegistryEventString",""]]};