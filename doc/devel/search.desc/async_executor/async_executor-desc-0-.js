searchState.loadedDescShard("async_executor", 0, "Async executors.\nAn async executor.\nA thread-local executor.\nA static-lifetimed async <code>Executor</code>.\nA static async <code>LocalExecutor</code> created from â€¦\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if there are no unfinished tasks.\nReturns <code>true</code> if there are no unfinished tasks.\nConsumes the <code>Executor</code> and intentionally leaks it.\nConsumes the <code>LocalExecutor</code> and intentionally leaks it.\nCreates a new StaticExecutor.\nCreates a new StaticLocalExecutor.\nCreates a new executor.\nCreates a single-threaded executor.\nRuns the executor until the given future completes.\nRuns the executor until the given future completes.\nRuns the executor until the given future completes.\nRuns the executor until the given future completes.\nSpawns a task onto the executor.\nSpawns a task onto the executor.\nSpawns a task onto the executor.\nSpawns a task onto the executor.\nSpawns many tasks onto the executor.\nSpawns many tasks onto the executor.\nSpawns a non-<code>&#39;static</code> task onto the executor.\nSpawns a non-<code>&#39;static</code> task onto the executor.\nRuns a single task.\nRuns a single task.\nRuns a single task.\nRuns a single task.\nAttempts to run a task if at least one is scheduled.\nAttempts to run a task if at least one is scheduled.\nAttempts to run a task if at least one is scheduled.\nAttempts to run a task if at least one is scheduled.")