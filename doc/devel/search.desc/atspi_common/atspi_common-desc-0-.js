searchState.loadedDescShard("atspi_common", 0, "atspi-common\nObject is a label indicating the keyboard accelerators for …\nObject is used to alert the user about something.\nObject contains a dynamic or moving image of some kind.\nScroll the object to application-dependent position on the …\nAn object corresponding to the toplevel accessible of an …\nObject is a 2d directional indicator.\nA section of a page that consists of a composition that …\nThis live region should be considered assertive.\nAn object which represents an audio element.\nThe object is a dialog or list containing items for …\nReserved for the desktop background; this is the …\nAn object which contains a text section that is quoted …\nOnly glyphs falling entirely within the region bounded by …\nScroll the object to the bottom edge of the window.\nScroll the object to the bottom right corner of the window.\nAn object the user can manipulate to tell the application …\nThe object is a graphical depiction of quantitative data. …\nObject contains one or more dates, usually arranged into a …\nObject that can be drawn into and is used to trap events.\nThe ‘background’ layer for most content renderers and …\nThe object contains descriptive information, usually …\nGives the character at the index of the cursor. With a …\nA choice that can be checked or unchecked and provides a …\nA menu item that behaves like a check box. See …\nEnumeration used by <code>TextProxy</code> to indicate how to treat …\nA specialized dialog that lets the user choose a color.\nThe header for a column of data.\nA list of choices the user can select from.\nAn object found within a document and designed to present …\nContent previously deleted or proposed to be deleted, e.g. …\nContent previously inserted or proposed to be inserted, …\nObject state, position, etc. is modified/controlled by …\nObject is an interactive object which modifies the state, …\nThe coordinate type encodes the frame of reference.\nAn object which allows entry of a date.\nA definition of a term or concept.\nReciprocal of <code>DescriptionFor</code>. Indicates that one or more …\nReciprocal of <code>DescribedBy</code>. Indicates that this object …\nAn object that represents a list of term-value groups. A …\nAn object that represents a term or phrase with a …\nAn object that represents the description, definition, or …\nA pane that supports internal frames and iconified …\nAn inconifed internal frame within a <code>Role::DesktopFrame</code>.\nReciprocal of <code>DetailsFor</code>. Indicates that this object has a …\nReciprocal of <code>Details</code>. Indicates that this object provides …\nAn object that allows a value to be changed via rotating a …\nA top level window with title bar and a border.\nA pane that allows the user to navigate through and select …\nA document frame which contains email content to be …\nThe object is a visual frame or container which contains a …\nA document frame which contains a presentation or slide …\nA document frame which contains a spreadsheet.\nA document frame which contains textual content, such as …\nA document frame which contains HTML or other markup …\nAn object used for drawing custom user interface elements.\nThe object is an editable text object in a toolbar.\nThe object is an embedded component container. This role …\nReciprocal of <code>Embeds</code>. Used to denote content rendered by …\nSimilar to <code>SubwindowOf</code>, but specifically used for …\nThe object is a component whose textual content may be …\nContains the error value\nReciprocal of <code>ErrorMessage</code>. Indicates that this object …\nReciprocal of <code>ErrorFor</code>. Indicates that this object has one …\nmeans that the role for this item is known, but not …\nUsed to indicate that a relationship exists, but its type …\nA specialized dialog that displays the files in the …\nA object that fills up space in a user interface.\nReciprocal of <code>FlowsTo</code>.\nObject renders content which flows logically to another …\nDon’t use, reserved for future use.\nAllows selection of a display font.\nAn object that serves as a document footer.\nAn object that contains the text of a footnote.\nThe object is a containing instance of document content …\nA top level window with a title bar, border, menubar, etc.\nA pane that is guaranteed to be painted on top of all …\nLevel of granularity to get text of, in relation to a …\nA group of related widgets. This group typically has a …\nA document container for HTML, whose children represent …\nAn object that serves as a document header.\nHeading: this is a heading with a level (usually 1-6). …\nA small fixed size picture, typically used to decorate …\nAn image, typically static.\nAn image map object. Usually a graphic with multiple …\nAn object designed to present a message to the user within …\nThe object is a window or similar viewport which is used …\nA frame-like object that is clipped by a desktop pane.\nA role indicating an error condition, such as …\nIndicates an error condition or uninitialized value.\nAn object used to present an icon or short string in an …\nObject is a label for one or more other objects.\nObject is labelled by one or more other objects.\nA region of a web page intended as a navigational …\nIndicates relative stacking order of a …\nA specialized pane that allows its children to be drawn in …\nScroll the object to the left edge of the window.\nA bar that serves as a level indicator to, for instance, …\nGives the line, as seen visually of which the cursor is …\nThe object is a hypertext anchor, i.e. a “link” in a …\nAn object that presents a list of objects to the user and …\nA non-collapsible list of choices the user can select from.\nAn object that represents an element of a list.\nA text widget or container holding log content, such as …\nA run of content that is marked or highlighted, such as …\nA container where non-essential information changes …\nA text widget or container that holds a mathematical …\nAn object that represents a mathematical fraction.\nAn object that represents a mathematical expression …\nCharacters/glyphs which intersect the maximum coordinate …\nA special layer between <code>Layer::Canvas</code> and <code>Layer::Widget</code>, …\nObject has a grouping relationship (e.g. ‘same group as…\nAn object usually found inside a menu bar that contains a …\nAn object usually drawn at the top of the primary dialog …\nAn object usually contained in a menu that presents an …\nCharacters/glyphs clipped by the minimum coordinate are …\nNo characters/glyphs are omitted.\nObject is a child of the target.\nObject is a parent of the target.\nNo live region.\nA transitory object designed to present a message to the …\nNot a meaningful relationship; clients should not normally …\nContains the success value\nA specialized pane whose primary use is inside a dialog.\nThe topmost layer.\nThe object is a containing instance which encapsulates a …\nAn object that is a child of a page tab list.\nAn object that presents a series of panels (or page tabs), …\nA generic container that is often used to group objects.\nAn object which is contains a single paragraph of text …\nGives the entire block of text, regardless of where the …\nIn relation to the parent of the element being checked.\nThis is the reciprocal relation to <code>PopupFor</code>.\nA text object uses for passwords, or other places where …\nThis live region should be considered polite.\nEnumeration used to indicate a type of live region and how …\nA layer for popup window content, above <code>Layer::Widget</code>.\nDenotes that the object is a transient window or frame …\nA temporary window that is usually used to offer the user …\nAn object used to indicate how much of a task has been …\nA specialized push button to open a menu.\nA specialized check box that will cause other radio …\nObject is both a menu item and a “radio button”. See …\nA rating system, generally out of five stars, but it does …\nThe object is redundant with another object in the …\nDescribes a relationship between one object and another.\nScroll the object to the right edge of the window.\nAn accessible object role.\nA specialized pane that has a glass pane and a layered …\nThe header for a row of data.\nAn object which describes margins and tab stops, etc. for …\nIn relation to the entire screen.\nAn object usually used to allow a user to incrementally …\nA scroll pane: the pane in which the scrollable content is …\nEnumeration used by interface the …\nThe object is a containing instance of document content …\nGives entire sentence in front of, or which contains, the …\nAn object usually contained in a menu to provide a visible …\nAn object that allows the user to select from a bounded …\nAn object which allows one of a set of choices to be …\nA specialized panel that presents two other panels at the …\nA generic non-container object whose purpose is to display …\nObject displays non-quantitative status information (c.f. …\nAn object that contains text that is displayed as a …\nObject is visually and semantically considered a subwindow …\nA container for content that is called out as a proposed …\nAn object that contains text that is displayed as a …\nAn object used to represent information in terms of rows …\nA ‘cell’ or discrete child within a Table. Note: Table …\nAn object which labels a particular column in an …\nA row in a table.\nAn object which labels a particular row in a <code>Self::Table</code>. …\nObject allows menu to be removed from menubar and shown in …\nAn object that emulates a terminal.\nAn interactive widget that supports multiple lines of text …\nDescribes a selection of text, including selections across …\nAn object containing a numerical counter which indicates …\nA bar that serves as the title of a window or a dialog.\nA specialized push button that can be checked or …\nA bar or palette usually composed of push buttons or …\nAn object that provides information about another object.\nObject is a tooltip associated with another object.\nScroll the object to the top edge of the window.\nScroll the object to the top left corner of the window.\nAn object used to repsent hierarchical information to the …\nAn object that represents an element of a tree.\nAn object that presents both tabular and hierarchical info …\nWhen the role cannot be accurately reported, this role …\nAn object which represents a video element.\nAn object usually used in a scroll pane, or to otherwise …\nThe layer in which the majority of ordinary ‘foreground…\nA top level window with no title or border.\nIn relation to only the window.\nThe layer in which a toplevel window background usually …\nGives the entire word in front of, or which contains, the …\nCommon types for <code>org.a11y.atspi.Cache</code> events.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConversion functions and types representing a set of …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet a readable, English name from the role.\nAn action which may be triggered through the accessibility …\nDescription of the action\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe keybinding(s) used to trigger it (without the AT).\nThe name of the action\nThe item type provided by <code>Cache:Add</code> signals\nThe item type provided by <code>Cache:Add</code> signals\nThe application (root object(?)    (so)\nThe application (root object(?)    (so)\nChild count of the accessible  i\nList of references to the accessible’s children.  a(so)\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe exposed interface(s) set.  as\nThe exposed interface(s) set.  as\nThe accessbile index in parent.  i\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMore detailed localized name.\nMore detailed localized name.\nThe accessible object (within the application)   (so)\nThe accessible object (within the application)   (so)\nThe parent object.  (so)\nThe parent object.  (so)\n<code>ObjectRef</code> role. u\n<code>ObjectRef</code> role. u\nThe short localized name.  s\nThe short localized name.  s\nThe states applicable to the accessible.  au\nThe states applicable to the accessible.  au\nAn error type that can describe atspi and <code>std</code> and …\nWhen testing on either variant, we might find the we are …\nConverting one type into another failure\nStd i/o error variant.\nAn infallible error; this is just something to satisfy the …\nFailed to convert an integer into another type of integer …\nOn specific types, if the event / message member does not …\nWhen an interface is not available.\nOn specific types, if the kind (string variant) does not …\nOn specific types, if the event / message member does not …\nNo interface on event.\nNo member on event.\nNo name on bus.\nOther errors.\nFailed to parse a string into an enum variant\nFailed to get the ID of a path.\nTo indicate a match or equality test on a signal body …\nWhen matching on an unknown interface\nWhen matching on an unknown role\nThe signal that was encountered is unknown.\nA <code>zbus_names</code> error variant\nA <code>zbus</code> or <code>zbus::Fdo</code> error. variant.\nA <code>zbus_names</code> error variant\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn event that is emitted when the registry daemon has …\nSee: <code>EventListenerDeregisteredEvent</code>.\nAn event that is emitted by the registry daemon, to inform …\nCovers both <code>EventListener</code> events.\nAn event that is emitted by the regostry daemon to signal …\nSignal type emitted by <code>EventListenerRegistered</code> and …\nSee: <code>EventListenerRegisteredEvent</code>.\nA list of events that have been deregistered via the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>ObjectRef</code> the event applies to.\nThe <code>ObjectRef</code> the event applies to.\nThe <code>ObjectRef</code> the event applies to.\nA list of events that have been registered via the …\nType that contains the <code>zbus::Message</code> for meta information …\nType that contains the <code>zbus::Message</code> for meta information …\n<code>Cache::RemoveAccessible</code> signal event type.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>ObjectRef</code> the event applies to.\nThe <code>ObjectRef</code> the event applies to.\nThe application that emitted the signal TODO Check Me The …\nA cache item to add to the internal cache.\nA cache item to add to the internal cache.\nThe node that was removed from the application tree  TODO …\nAn event triggered by the completion of a document load …\nAn event triggered by the cancelling of a document load. …\nThe focused page has changed.\nAn event triggered by a reloading of a document. For …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nCommon event body that can be either owned or borrowed.\nAT-SPI2 protocol native event body type.\nEvent body as used exclusively by ‘Qt’ toolkit.\nThe <code>any_data</code> field as <code>&amp;Value</code>. With both variants, this …\nGeneric <code>any_data</code> value described by AT-SPI. This can be …\nGeneric <code>any_data</code> value described by AT-SPI. This can be …\nGeneric <code>any_data</code> value described by AT-SPI. This can be …\nGeneric <code>any_data</code> value described by AT-SPI. This can be …\nNon-consuming conversion to an owned event body.\nSafety\nSafety\nSafety\nSafety\nGeneric detail1 value described by AT-SPI.\nGeneric detail1 value described by AT-SPI.\nGeneric detail1 value described by AT-SPI.\nGeneric detail1 value described by AT-SPI.\nGeneric detail2 value described by AT-SPI.\nGeneric detail2 value described by AT-SPI.\nGeneric detail2 value described by AT-SPI.\nGeneric detail2 value described by AT-SPI.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsuming conversion to an owned event body.\nThe <code>kind</code> field as <code>&amp;str</code>.\nkind variant, used for specifying an event triple “…\nkind variant, used for specifying an event triple “…\nkind variant, used for specifying an event triple “…\nkind variant, used for specifying an event triple “…\nTake or convert the <code>any_data</code> field as <code>OwnedValue</code>. With the …\nTake or convert the <code>kind</code> field as <code>String</code>.\nConvert this borrowed event body to an owned event body.\nConvert partially borrowed Qt event body to an owned event …\nSee: <code>AbsEvent</code>.\nSee: <code>ActivateEvent</code>.\nSee: <code>ActiveDescendantChangedEvent</code>.\nSee: <code>AddAccessibleEvent</code>.\nSee: <code>AnnouncementEvent</code>.\nSee: <code>ApplicationChangedEvent</code>.\nSee: <code>DocumentAttributesChangedEvent</code>.\nSee: <code>ObjectAttributesChangedEvent</code>.\nSee: <code>AvailableEvent</code>.\nSee: <code>BoundsChangedEvent</code>.\nSee: <code>ButtonEvent</code>.\nSee: <code>CacheEvents</code>.\nAll events related to the <code>org.a11y.atspi.Cache</code> interface. …\nSee: <code>CharWidthChangedEvent</code>.\nSee: <code>ChildrenChangedEvent</code>.\nSee: <code>CloseEvent</code>.\nSee: <code>ColumnCountChangedEvent</code>.\nSee: <code>ColumnDeletedEvent</code>.\nSee: <code>ColumnInsertedEvent</code>.\nSee: <code>ColumnReorderedEvent</code>.\nSee: <code>ContentChangedEvent</code>.\nSee: <code>CreateEvent</code>.\nSee: <code>DeactivateEvent</code>.\nSee: <code>DesktopCreateEvent</code>.\nSee: <code>DesktopDestroyEvent</code>.\nSee: <code>DestroyEvent</code>.\nSee: <code>DocumentEvents</code>.\nEncapsulates the various different accessibility bus …\nSee: <code>FocusEvents</code>.\nSee: <code>FocusEvent</code>.\nSee: <code>KeyboardEvents</code>.\nSee: <code>LegacyAddAccessibleEvent</code>.\nSee: <code>LineChangedEvent</code>.\nSee: <code>LineCountChangedEvent</code>.\nSee: <code>LinkSelectedEvent</code>.\nSee: <code>EventListenerEvents</code>.\nSee: <code>LoadCompleteEvent</code>.\nSee: <code>LoadStoppedEvent</code>.\nSee: <code>LowerEvent</code>.\nSee: <code>MaximizeEvent</code>.\nSee: <code>MinimizeEvent</code>.\nSee: <code>ModelChangedEvent</code>.\nSee: <code>ModifiersEvent</code>.\nSee: <code>MouseEvents</code>.\nSee: <code>MoveEvent</code>.\nSee: <code>ObjectEvents</code>.\nSee: <code>PageChangedEvent</code>.\nSee: <code>ObjectPropertyChangeEvent</code>.\nSee: <code>WindowPropertyChangeEvent</code>.\nSee: <code>RaiseEvent</code>.\nSee: <code>RelEvent</code>.\nSee: <code>ReloadEvent</code>.\nSee: <code>RemoveAccessibleEvent</code>.\nSee: <code>ReparentEvent</code>.\nSee: <code>ResizeEvent</code>.\nSee: <code>RestoreEvent</code>.\nSee: <code>RestyleEvent</code>.\nSee: <code>RowDeletedEvent</code>.\nSee: <code>RowInsertedEvent</code>.\nSee: <code>RowReorderedEvent</code>.\nSee: <code>SelectionChangedEvent</code>.\nSee: <code>ShadeEvent</code>.\nSee: <code>StateChangedEvent</code>.\nSee: <code>TerminalEvents</code>.\nAll events related to the <code>org.a11y.atspi.Event.Terminal</code> …\nSee: <code>TextAttributesChangedEvent</code>.\nSee: <code>TextBoundsChangedEvent</code>.\nSee: <code>TextCaretMovedEvent</code>.\nSee: <code>TextChangedEvent</code>.\nSee: <code>TextSelectionChangedEvent</code>.\nSee: <code>UUshadeEvent</code>.\nSee: <code>VisibleDataChangedEvent</code>.\nSee: <code>WindowEvents</code>.\nAll events on the <code>org.a11y.atspi.Event.Window</code> interface.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe <code>crate::ObjectRef</code> which the event applies to.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe <code>crate::ObjectRef</code> which the event applies to.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nA child of an <code>crate::ObjectRef</code> has been added or removed.\nA column has been removed from a table.\nA column has been added to a table.\nA column has been re-ordered within a table.\nAny accessibility related property on an <code>crate::ObjectRef</code>. …\nThe <code>org.a11y.atspi.Event.Object:PropertyChange</code> event.\nA row has been deleted from a table.\nA row has been added to a table.\nA row has been moved within a table.\nA state of an object has been modified. A <code>State</code> can be …\nSignal that some attributes about the text (usually …\nThe caret of the user also known as a cursor (not to be …\nText has changed within an <code>crate::ObjectRef</code>.\nA reference to the new child.\nWhether the state was enabled or disabled.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nIndex to remove from/add to.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe table which has had a row inserted.\nThe table which has had a row re-ordered.\nThe table which has had a row removed.\nThe table which has had a column inserted.\nThe table which has had a column re-ordered.\nThe table which has had a column removed.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe object on which the caret has been moved on.\nlength of the insertion/deletion\nPoliteness level.\nThe <code>crate::Operation</code> being performed.\nThe <code>crate::Operation</code> being performed.\nNew position of the caret.\nstarting index of the insertion/deletion\nThe state to be enabled/disabled.\nText of the announcement.\nthe text being inserted/deleted\nThe width of a terminal emulator has changed sufficiently …\nThe width of a terminal emulator has changed sufficiently …\nA line of text has been changed.\nThe height of a terminal emulator has changed sufficiently …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nWhat is the body type of this event.\nDescribes the <code>DBus</code>-related information about a given …\nThe <code>DBus</code> interface name for this event. For example, for …\nA static interface string for <code>DBus</code>. This should usually be …\nThe <code>DBus</code> member for the event. For example, for an …\n<code>EventProperties</code> allows access to the internals of an …\nDescribes properties of a specific event <em>type</em>.\nA specific trait <em>only</em> to define an interface name. This is …\nA specific trait <em>only</em> to define match rules. This is …\nA specific trait <em>only</em> to define registry event matches. …\nA static match rule string for <code>DBus</code>. This should usually …\nA static match rule string for <code>DBus</code>. This should usually …\nA registry event string for registering for event …\nA registry event string for registering for event …\nThe body of the object.\nBuild an event from a <code>zbus::Message</code> reference. This …\nBuild an event from an <code>ObjectRef</code> and <code>Self::Body</code>. This …\nConvert a <code>zbus::Message</code> into this event type. Does all the …\nValidate the body signature against the <code>zvariant::Signature</code>…\nValidate the interface string via …\nValidate the member string via …\nA window has been closed.\nA new window has been created.\nA new virtual desktop has been created.\nA virtual desktop has been deleted.\nThe window has been maximized.\nThe window has been minimized.\nA window has been resized.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe application which has been minimized.\nThe application which has been maximized.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe application which has been closed.\nAn application to query for additional events from.\nThe <code>crate::ObjectRef</code> which the event applies to.\nA reference to a new desktop\nA reference to the destroyed desktop.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe application which has been resized.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nInterface to indicate implementation of <code>AccessibleProxy</code>.\nInterface to indicate implementation of <code>ActionProxy</code>.\nInterface to indicate implementation of <code>ApplicationProxy</code>.\nInterface to indicate implementation of <code>CacheProxy</code>.\nInterface to indicate implementation of <code>CollectionProxy</code>.\nInterface to indicate implementation of <code>ComponentProxy</code>.\nInterface to indicate implementation of …\nInterface to indicate implementation of …\nInterface to indicate implementation of <code>DocumentProxy</code>.\nInterface to indicate implementation of <code>EditableTextProxy</code>.\nInterface to indicate implementation of <code>HyperlinkProxy</code>.\nInterface to indicate implementation of <code>HypertextProxy</code>.\nInterface to indicate implementation of <code>ImageProxy</code>.\nAT-SPI interfaces an accessible object can implement.\nA collection type which encodes the AT-SPI interfaces an …\nInterface to indicate implementation of <code>RegistryProxy</code>.\nInterface to indicate implementation of <code>SelectionProxy</code>.\nInterface to indicate implementation of <code>SocketProxy</code>.\nInterface to indicate implementation of <code>TableProxy</code>.\nInterface to indicate implementation of <code>TableCellProxy</code>.\nInterface to indicate implementation of <code>TextProxy</code>.\nInterface to indicate implementation of <code>ValueProxy</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAll of the criteria must be met.\nAny of the criteria must criteria must be met.\nCanonical sort order\nSame as <code>Self::All</code> if the criterion item is non-empty - All …\nFlow sort order\nTraverse the tree in order of appearance.\nInvalidates match criterion.\nInvalid sort order\nEnumeration used by <code>ObjectMatchRule</code> to specify how to …\nNone of the criteria must be met.\nDefinition of match rules for accessible objects. Rule(s) …\nThe ‘builder’ type for <code>MatchRule</code>. Use its methods to …\nWhen traversing the tree, restrict to children of the …\nWhen traversing the tree, restrict to siblings of the …\nReverse canonical sort order\nReverse flow sort order\nReverse tab sort order\nEnumeration used by interface <code>CollectionProxy</code> to specify …\nTab sort order\nDefines how an object-tree is to be traversed. Used in …\nInsert a map of attributes\nBuilds the <code>ObjectMatchRule</code>\nCreate a new <code>MatchRuleBuilder</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nInsert an <code>InterfaceSet</code> from a collection of <code>Interface</code>s\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSets the inversion of the <code>MatchRule</code>, defaults to <code>false</code>, no …\nInsert a slice of <code>Role</code>s\nInsert a <code>StateSet</code> to the builder\n<code>ObjectRef</code> type\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAn operation can either be <code>Self::Insert</code> or <code>Self::Delete</code>. …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nIndicates a window is currently the active window, or an …\nIndicates this object’s visual representation is …\nIndicates that the object is armed.\nIndicates the current object is busy, i.e. onscreen …\nIndicates this object has the potential to be checked, …\nIndicates this object is currently checked.\nIndicates this object is collapsed.\nIndicates that this object no longer has a valid backing …\nIndicates the user can change the contents of this object.\nIndicates that this object is enabled, i.e. that it …\nIndicates this object allows progressive disclosure of its …\nIndicates this object is expanded.\nIndicates this object can accept keyboard focus, which …\nIndicates this object currently has the keyboard focus.\nIndicates that the object has a popup context menu or …\nIndicates that the object has an associated tooltip.\nIndicates the orientation of this object is horizontal.\nIndicates this object is minimized and is represented only …\nIndicates that a check box or other boolean indicator is …\nIndicates an invalid state - probably an error condition.\nThis object has indicated an error condition due to …\nIndicates that the object in question is the ‘default’ …\nIndicates that “active-descendant-changed” event is …\nIndicates something must be done with this object before …\nIndicates this (text) object can contain multiple lines of …\nIndicates this object allows more than one of its children …\nIndicates this object paints every pixel within its …\nIndicates this object is currently pressed.\nIndicates that an object which is <code>State::Enabled</code> and …\nIndicates that user interaction with this object is ‘…\nIndicates the size of this object’s size is not fixed.\nIndicates this object is the child of an object that …\nIndicates that the object in question supports text …\nIndicates this object is the child of an object that …\nIndicates this object is sensitive, e.g. to user …\nIndicates this object, the object’s parent, the object’…\nIndicates this (text) object can contain only a single …\nIndicates that the information returned for this object …\nUsed by various interfaces indicating every possible state …\nThe bitflag representation of all states an object may …\nThis state indicates that the object in question …\nIndicates this object is transient.\nIndicates that an object’s onscreen content is …\nIndicates the orientation of this object is vertical; for …\nIndicates this object is visible, e.g. has been explicitly …\nIndicates that the object (typically a hyperlink) has …\nReturns the state as represented by a u64.\nWhether the <code>StateSet</code> contains a <code>State</code>.\nCreate an empty <code>StateSet</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the <code>StateSet</code> that corresponds to the provided <code>u64</code>s …\nInserts a <code>State</code> in the <code>StateSet</code>.\nReturns true if at least one flag is shared.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if all states are unset.\nReturns an iterator that yields each set <code>State</code>.\nCreate a new <code>StateSet</code>.\nRemoves a <code>State</code> (optionally) previously contained in the …\nReturns the state as a static string.\nToggles the matching bits.")