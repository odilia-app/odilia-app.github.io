searchState.loadedDescShard("atspi_proxies", 0, "All proxy structures for communicating using AT-SPI. Each …\nInterface to indicate implementation of <code>AccessibleProxy</code>.\nInterface to indicate implementation of <code>ActionProxy</code>.\nInterface to indicate implementation of <code>ApplicationProxy</code>.\nAn error type that can describe atspi and <code>std</code> and …\nInterface to indicate implementation of <code>CacheProxy</code>.\nWhen testing on either variant, we might find the we are …\nInterface to indicate implementation of <code>CollectionProxy</code>.\nInterface to indicate implementation of <code>ComponentProxy</code>.\nConverting one type into another failure\nThe coordinate type encodes the frame of reference.\nInterface to indicate implementation of …\nInterface to indicate implementation of …\nInterface to indicate implementation of <code>DocumentProxy</code>.\nInterface to indicate implementation of <code>EditableTextProxy</code>.\nInterface to indicate implementation of <code>HyperlinkProxy</code>.\nInterface to indicate implementation of <code>HypertextProxy</code>.\nStd i/o error variant.\nInterface to indicate implementation of <code>ImageProxy</code>.\nAn infallible error; this is just something to satisfy the …\nFailed to convert an integer into another type of integer …\nAT-SPI interfaces an accessible object can implement.\nOn specific types, if the event / message member does not …\nWhen an interface is not available.\nA collection type which encodes the AT-SPI interfaces an …\nOn specific types, if the kind (string variant) does not …\nOn specific types, if the event / message member does not …\nNo interface on event.\nNo member on event.\nNo name on bus.\nNo path on event.\nOther errors.\nIn relation to the parent of the element being checked.\nFailed to parse a string into an enum variant\nFailed to get the ID of a path.\nInterface to indicate implementation of <code>RegistryProxy</code>.\nIn relation to the entire screen.\nInterface to indicate implementation of <code>SelectionProxy</code>.\nTo indicate a match or equality test on a signal body …\nInterface to indicate implementation of <code>SocketProxy</code>.\nInterface to indicate implementation of <code>TableProxy</code>.\nInterface to indicate implementation of <code>TableCellProxy</code>.\nInterface to indicate implementation of <code>TextProxy</code>.\nWhen matching on an unknown interface\nWhen matching on an unknown role\nThe signal that was encountered is unknown.\nInterface to indicate implementation of <code>ValueProxy</code>.\nIn relation to only the window.\nA <code>zbus_names</code> error variant\nA <code>zbus</code> or <code>zbus::Fdo</code> error. variant.\nA <code>zbus_names</code> error variant\n<code>AccessibleProxy</code>\n<code>ActionProxy</code>\n<code>ApplicationProxy</code>\n<code>DBus</code> interface proxies for: <code>org.a11y.Status</code>, <code>org.a11y.Bus</code>\n<code>DBus</code> interface proxy for: <code>org.a11y.atspi.Cache</code>\n<code>CollectionProxy</code>\n<code>DBus</code> interface proxy for: <code>org.a11y.atspi.Component</code>\n<code>DBus</code> interface proxy for: …\n<code>DBus</code> interface proxy for: …\n<code>DBus</code> interface proxy for: <code>org.a11y.atspi.Document</code>\n<code>DBus</code> interface proxy for: <code>org.a11y.atspi.EditableText</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\n<code>DBus</code> interface proxy for: <code>org.a11y.atspi.Hyperlink</code>\n<code>DBus</code> interface proxy for: <code>org.a11y.atspi.Hypertext</code>\n<code>DBus</code> interface proxy for: <code>org.a11y.atspi.Image</code>\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>DBus</code> interface proxy for: <code>org.a11y.atspi.Registry</code>\n<code>DBus</code> interface proxy for: <code>org.a11y.atspi.Selection</code>\n<code>DBus</code> interface proxy for: <code>org.a11y.atspi.Socket</code>\n<code>DBus</code> interface proxy for: <code>org.a11y.atspi.Table</code>\n<code>DBus</code> interface proxy for: <code>org.a11y.atspi.TableCell</code>\n<code>DBus</code> interface proxy for: <code>org.a11y.atspi.Text</code>\n<code>DBus</code> interface proxy for: <code>org.a11y.atspi.Value</code>\n<code>AccessibleProxy</code>\nApplication-specific identifier for the current object.\nReturns an <code>AccessibleProxy</code>, the handle to the object’s  …\nReturns a customizable builder for this proxy.\nGet the cached value of the <code>AccessibleId</code> property, or <code>None</code> …\nGet the cached value of the <code>ChildCount</code> property, or <code>None</code> …\nGet the cached value of the <code>Description</code> property, or <code>None</code> …\nGet the cached value of the <code>HelpText</code> property, or <code>None</code> if …\nGet the cached value of the <code>Locale</code> property, or <code>None</code> if …\nGet the cached value of the <code>Name</code> property, or <code>None</code> if the …\nGet the cached value of the <code>Parent</code> property, or <code>None</code> if …\nNumber of accessible children for the current object.\nHuman-readable, localized description of <code>self</code> in more …\nReturns the argument unchanged.\nReturns an <code>ObjectRef</code> which refers to the <code>Application</code> …\nGets a list of name/value pairs of attributes or …\nRetrieve child by index (starting from 0),\nRetrieves a list of the object’s accessible children.\nThis object resides in its parent’s list of children. …\nReturns an <code>InterfaceSet</code> accessible interface names …\nGets a <code>String</code> corresponding to the name of the role played …\nReturns a set of relationships between the this <code>self</code> …\nGets the <code>Role</code> that the current accessible object …\nGets a <code>String</code> corresponding to the name of the role played …\nMethod to retrieve the <code>StateSet</code> of states currently held …\nHelp text for the current object.\nThe reference to the underlying <code>zbus::Proxy</code>.\nThe mutable reference to the underlying <code>zbus::Proxy</code>.\nCalls <code>U::from(self)</code>.\nReturns an <code>AccessibleProxy</code>, the handle to the object’s  …\nConsumes <code>self</code>, returning the underlying <code>zbus::Proxy</code>.\nUnix locale for the current object.\nHuman-readable, localized, short name for the object.\nCreates a new proxy with the default service and path.\n<code>ObjectRef</code> parent object of the current object.\nCreate a stream for the <code>AccessibleId</code> property changes. …\nCreate a stream for the <code>ChildCount</code> property changes. This …\nCreate a stream for the <code>Description</code> property changes. This …\nCreate a stream for the <code>HelpText</code> property changes. This is …\nCreate a stream for the <code>Locale</code> property changes. This is a …\nCreate a stream for the <code>Name</code> property changes. This is a …\nCreate a stream for the <code>Parent</code> property changes. This is a …\nA handle for a remote object implementing the …\nReturns a customizable builder for this proxy.\nGet the cached value of the <code>Nactions</code> property, or <code>None</code> if …\nPerforms the specified action on the object.\nReturns the argument unchanged.\nReturns an array of localized name, localized description, …\nReturns the localized description for the action at the …\nReturns the keybinding for the action, specified by a …\nReturns a short, localized name for the action at the …\nReturns a machine-readable name for the action at the …\nThe reference to the underlying <code>zbus::Proxy</code>.\nThe mutable reference to the underlying <code>zbus::Proxy</code>.\nCalls <code>U::from(self)</code>.\nConsumes <code>self</code>, returning the underlying <code>zbus::Proxy</code>.\nReturns the number of available actions.\nCreates a new proxy with the default service and path.\nCreate a stream for the <code>Nactions</code> property changes. This is …\n<code>Application</code> is the interface which is implemented by each …\nretrieves AT-SPI2 version.\nReturns a customizable builder for this proxy.\nGet the cached value of the <code>AtspiVersion</code> property, or <code>None</code> …\nGet the cached value of the <code>Id</code> property, or <code>None</code> if the …\nGet the cached value of the <code>ToolkitName</code> property, or <code>None</code> …\nGet the cached value of the <code>Version</code> property, or <code>None</code> if …\nReturns the argument unchanged.\nMethod to retrieve the application’s locale.\nRetrieve numerical id of the application.\nThe reference to the underlying <code>zbus::Proxy</code>.\nThe mutable reference to the underlying <code>zbus::Proxy</code>.\nCalls <code>U::from(self)</code>.\nConsumes <code>self</code>, returning the underlying <code>zbus::Proxy</code>.\nCreates a new proxy with the default service and path.\nCreate a stream for the <code>AtspiVersion</code> property changes. …\nCreate a stream for the <code>Id</code> property changes. This is a …\nCreate a stream for the <code>ToolkitName</code> property changes. This …\nCreate a stream for the <code>Version</code> property changes. This is …\nSet ID of the application.\nRetrieves the name of the toolkit used to implement the …\nReturns the version of the toolkit used to implement the …\nReturns a customizable builder for this proxy.\nReturns a customizable builder for this proxy.\nGet the cached value of the <code>IsEnabled</code> property, or <code>None</code> if …\nGet the cached value of the <code>ScreenReaderEnabled</code> property, …\nReturns the argument unchanged.\nReturns the argument unchanged.\n<code>GetAddress</code> method\nThe reference to the underlying <code>zbus::Proxy</code>.\nThe reference to the underlying <code>zbus::Proxy</code>.\nThe mutable reference to the underlying <code>zbus::Proxy</code>.\nThe mutable reference to the underlying <code>zbus::Proxy</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes <code>self</code>, returning the underlying <code>zbus::Proxy</code>.\nConsumes <code>self</code>, returning the underlying <code>zbus::Proxy</code>.\n<code>IsEnabled</code> property\nCreates a new proxy with the default service and path.\nCreates a new proxy with the default service and path.\nCreate a stream for the <code>IsEnabled</code> property changes. This …\nCreate a stream for the <code>ScreenReaderEnabled</code> property …\n<code>ScreenReaderEnabled</code> property\nReturns a customizable builder for this proxy.\nReturns the argument unchanged.\n<code>GetItems</code> method\n<code>GetItems</code> method to support legacy servers (old Qt-based …\nThe reference to the underlying <code>zbus::Proxy</code>.\nThe mutable reference to the underlying <code>zbus::Proxy</code>.\nCalls <code>U::from(self)</code>.\nConsumes <code>self</code>, returning the underlying <code>zbus::Proxy</code>.\nCreates a new proxy with the given destination, and the …\nReturns a customizable builder for this proxy.\nReturns the argument unchanged.\nThe active descendant of the given object.\nRetrieves a list of objects that match the specified …\nRetrieves objects from the collection, after <code>current_object</code>…\nRetrieves objects from the collection, before …\nThe reference to the underlying <code>zbus::Proxy</code>.\nThe mutable reference to the underlying <code>zbus::Proxy</code>.\nCalls <code>U::from(self)</code>.\nConsumes <code>self</code>, returning the underlying <code>zbus::Proxy</code>.\nCreates a new proxy with the default service and path.\nReturns a customizable builder for this proxy.\n<code>Contains</code> method\nReturns the argument unchanged.\n<code>GetAccessibleAtPoint</code> method\n<code>GetAlpha</code> method\n<code>GetExtents</code> method\n<code>GetLayer</code> method\n<code>GetMDIZOrder</code> method\n<code>GetPosition</code> method\n<code>GetSize</code> method\n<code>GrabFocus</code> method\nThe reference to the underlying <code>zbus::Proxy</code>.\nThe mutable reference to the underlying <code>zbus::Proxy</code>.\nCalls <code>U::from(self)</code>.\nConsumes <code>self</code>, returning the underlying <code>zbus::Proxy</code>.\nCreates a new proxy with the default service and path.\n<code>ScrollTo</code> method\n<code>ScrollToPoint</code> method\n<code>SetExtents</code> method\n<code>SetPosition</code> method\n<code>SetSize</code> method\nReturns a customizable builder for this proxy.\n<code>DeregisterDeviceEventListener</code> method\n<code>DeregisterKeystrokeListener</code> method\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\n<code>GenerateKeyboardEvent</code> method\n<code>GenerateMouseEvent</code> method\nIf <code>true</code>, indicates that events are received not from the …\nThe reference to the underlying <code>zbus::Proxy</code>.\nThe mutable reference to the underlying <code>zbus::Proxy</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes <code>self</code>, returning the underlying <code>zbus::Proxy</code>.\nCreates a new proxy with the default service and path.\n<code>NotifyListenersAsync</code> method\n<code>NotifyListenersSync</code> method\nWhether events may be consumed by the AT client. Requires …\n<code>RegisterDeviceEventListener</code> method\n<code>RegisterKeystrokeListener</code> method\nWhether events are delivered synchronously, before the …\nReturns a customizable builder for this proxy.\nReturns the argument unchanged.\nThe reference to the underlying <code>zbus::Proxy</code>.\nThe mutable reference to the underlying <code>zbus::Proxy</code>.\nCalls <code>U::from(self)</code>.\nConsumes <code>self</code>, returning the underlying <code>zbus::Proxy</code>.\nCreates a new proxy with the default service and path.\n<code>NotifyEvent</code> method\nReturns a customizable builder for this proxy.\nGet the cached value of the <code>CurrentPageNumber</code> property, or …\nGet the cached value of the <code>PageCount</code> property, or <code>None</code> if …\n<code>CurrentPageNumber</code> property\nReturns the argument unchanged.\n<code>GetAttributeValue</code> method\n<code>GetAttributes</code> method\n<code>GetLocale</code> method\n<code>GetTextSelections</code> method\nThe reference to the underlying <code>zbus::Proxy</code>.\nThe mutable reference to the underlying <code>zbus::Proxy</code>.\nCalls <code>U::from(self)</code>.\nConsumes <code>self</code>, returning the underlying <code>zbus::Proxy</code>.\nCreates a new proxy with the default service and path.\n<code>PageCount</code> property\nCreate a stream for the <code>CurrentPageNumber</code> property …\nCreate a stream for the <code>PageCount</code> property changes. This …\n<code>SetTextSelections</code> method\nReturns a customizable builder for this proxy.\n<code>CopyText</code> method\n<code>CutText</code> method\n<code>DeleteText</code> method\nReturns the argument unchanged.\nThe reference to the underlying <code>zbus::Proxy</code>.\nThe mutable reference to the underlying <code>zbus::Proxy</code>.\n<code>InsertText</code> method\nCalls <code>U::from(self)</code>.\nConsumes <code>self</code>, returning the underlying <code>zbus::Proxy</code>.\nCreates a new proxy with the default service and path.\n<code>PasteText</code> method\n<code>SetTextContents</code> method\nSee: <code>AbsEvent</code>.\nSee: <code>ActivateEvent</code>.\nSee: <code>ActiveDescendantChangedEvent</code>.\nSee: <code>AddAccessibleEvent</code>.\nSee: <code>AnnouncementEvent</code>.\nSee: <code>ApplicationChangedEvent</code>.\nSee: <code>ObjectAttributesChangedEvent</code>.\nSee: <code>DocumentAttributesChangedEvent</code>.\nSee: <code>AvailableEvent</code>.\nWhat is the body type of this event.\nSee: <code>BoundsChangedEvent</code>.\nSee: <code>ButtonEvent</code>.\nSee: <code>CacheEvents</code>.\nAll events related to the <code>org.a11y.atspi.Cache</code> interface. …\nSee: <code>CharWidthChangedEvent</code>.\nSee: <code>ChildrenChangedEvent</code>.\nSee: <code>CloseEvent</code>.\nSee: <code>ColumnCountChangedEvent</code>.\nSee: <code>ColumnDeletedEvent</code>.\nSee: <code>ColumnInsertedEvent</code>.\nSee: <code>ColumnReorderedEvent</code>.\nSee: <code>ContentChangedEvent</code>.\nSee: <code>CreateEvent</code>.\nA static interface string for <code>DBus</code>. This should usually be …\nThe event’s <code>DBus</code> member.\nThe <code>DBus</code> interface name for an event - or a wrapper type. …\nA static <code>DBus</code> match rule string. This should usually be a …\nThe <code>DBus</code> member for the event. For example, for an …\nA ‘alias’-trait that combines all the <code>DBus</code> related …\nSee: <code>DeactivateEvent</code>.\nSee: <code>EventListenerDeregisteredEvent</code>.\nSee: <code>DesktopCreateEvent</code>.\nSee: <code>DesktopDestroyEvent</code>.\nSee: <code>DestroyEvent</code>.\nSee: <code>DocumentEvents</code>.\nEncapsulates the various different accessibility bus …\nCommon event body that can be either owned or borrowed.\nAT-SPI2 protocol native event body type.\nEvent body as used exclusively by ‘Qt’ toolkit.\nThe events that can be emitted by the registry daemon. …\n<code>EventProperties</code> allows access to the internals of an …\nDescribes properties of a specific event <em>type</em>.\nSee: <code>FocusEvents</code>.\nSee: <code>FocusEvent</code>.\nSee: <code>KeyboardEvents</code>.\nSee: <code>LegacyAddAccessibleEvent</code>.\nSee: <code>LineChangedEvent</code>.\nSee: <code>LineCountChangedEvent</code>.\nSee: <code>LinkSelectedEvent</code>.\nSee: <code>EventListenerEvents</code>.\nSee: <code>LoadCompleteEvent</code>.\nSee: <code>LoadStoppedEvent</code>.\nSee: <code>LowerEvent</code>.\nA static match rule string for <code>DBus</code>.\nSee: <code>MaximizeEvent</code>.\nSee: <code>MinimizeEvent</code>.\nSee: <code>ModelChangedEvent</code>.\nSee: <code>ModifiersEvent</code>.\nSee: <code>MouseEvents</code>.\nSee: <code>MoveEvent</code>.\nSee: <code>ObjectEvents</code>.\nSee: <code>PageChangedEvent</code>.\nSee: <code>ObjectPropertyChangeEvent</code>.\nSee: <code>WindowPropertyChangeEvent</code>.\nA registry event string for registering for event …\nSee: <code>RaiseEvent</code>.\nSee: <code>EventListenerRegisteredEvent</code>.\nA static <code>Registry</code> event string for registering with the …\nSee: <code>RelEvent</code>.\nSee: <code>ReloadEvent</code>.\nSee: <code>RemoveAccessibleEvent</code>.\nSee: <code>ReparentEvent</code>.\nSee: <code>ResizeEvent</code>.\nSee: <code>RestoreEvent</code>.\nSee: <code>RestyleEvent</code>.\nSee: <code>RowDeletedEvent</code>.\nSee: <code>RowInsertedEvent</code>.\nSee: <code>RowReorderedEvent</code>.\nSee: <code>SelectionChangedEvent</code>.\nSee: <code>ShadeEvent</code>.\nSee: <code>StateChangedEvent</code>.\nSee: <code>TerminalEvents</code>.\nAll events related to the <code>org.a11y.atspi.Event.Terminal</code> …\nSee: <code>TextAttributesChangedEvent</code>.\nSee: <code>TextBoundsChangedEvent</code>.\nSee: <code>TextCaretMovedEvent</code>.\nSee: <code>TextChangedEvent</code>.\nSee: <code>TextSelectionChangedEvent</code>.\nSee: <code>UUshadeEvent</code>.\nSee: <code>VisibleDataChangedEvent</code>.\nSee: <code>WindowEvents</code>.\nAll events on the <code>org.a11y.atspi.Event.Window</code> interface.\nThe <code>any_data</code> field as <code>&amp;Value</code>. With both variants, this …\nGeneric <code>any_data</code> value described by AT-SPI. This can be …\nGeneric <code>any_data</code> value described by AT-SPI. This can be …\nGeneric <code>any_data</code> value described by AT-SPI. This can be …\nGeneric <code>any_data</code> value described by AT-SPI. This can be …\nNon-consuming conversion to an owned event body.\nThe body of the object.\nSafety\nSafety\nSafety\nSafety\nThe <code>detail1</code> field.\nGeneric detail1 value described by AT-SPI.\nGeneric detail1 value described by AT-SPI.\nGeneric detail1 value described by AT-SPI.\nGeneric detail1 value described by AT-SPI.\nThe <code>detail2</code> field.\nGeneric detail2 value described by AT-SPI.\nGeneric detail2 value described by AT-SPI.\nGeneric detail2 value described by AT-SPI.\nGeneric detail2 value described by AT-SPI.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBuild an event from a <code>zbus::Message</code> reference. This …\nBuild an event from an <code>ObjectRef</code> and <code>Self::Body</code>. This …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsuming conversion to an owned event body.\nThe <code>kind</code> field as <code>&amp;str</code>.\nkind variant, used for specifying an event triple “…\nkind variant, used for specifying an event triple “…\nkind variant, used for specifying an event triple “…\nkind variant, used for specifying an event triple “…\nThis module contains the events that are emitted by the …\nTake or convert the <code>any_data</code> field as <code>OwnedValue</code>. With the …\nTake or convert the <code>kind</code> field as <code>String</code>.\nConvert this borrowed event body to an owned event body.\nConvert a <code>zbus::Message</code> into this event type. Does all the …\nConvert partially borrowed Qt event body to an owned event …\nValidate the body signature against the <code>zvariant::Signature</code>…\nValidate the interface string via …\nValidate the member string via …\nType that contains the <code>zbus::Message</code> for meta information …\nType that contains the <code>zbus::Message</code> for meta information …\n<code>Cache::RemoveAccessible</code> signal event type.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>ObjectRef</code> the event applies to.\nThe <code>ObjectRef</code> the event applies to.\nThe application that emitted the signal TODO Check Me The …\nA cache item to add to the internal cache.\nA cache item to add to the internal cache.\nThe node that was removed from the application tree  TODO …\nAn event triggered by the completion of a document load …\nAn event triggered by the cancelling of a document load. …\nThe focused page has changed.\nAn event triggered by a reloading of a document. For …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nCommon event body that can be either owned or borrowed.\nAT-SPI2 protocol native event body type.\nEvent body as used exclusively by ‘Qt’ toolkit.\nGeneric <code>any_data</code> value described by AT-SPI. This can be …\nGeneric <code>any_data</code> value described by AT-SPI. This can be …\nGeneric <code>any_data</code> value described by AT-SPI. This can be …\nGeneric <code>any_data</code> value described by AT-SPI. This can be …\nGeneric detail1 value described by AT-SPI.\nGeneric detail1 value described by AT-SPI.\nGeneric detail1 value described by AT-SPI.\nGeneric detail1 value described by AT-SPI.\nGeneric detail2 value described by AT-SPI.\nGeneric detail2 value described by AT-SPI.\nGeneric detail2 value described by AT-SPI.\nGeneric detail2 value described by AT-SPI.\nkind variant, used for specifying an event triple “…\nkind variant, used for specifying an event triple “…\nkind variant, used for specifying an event triple “…\nkind variant, used for specifying an event triple “…\nSee: <code>AbsEvent</code>.\nSee: <code>ActivateEvent</code>.\nSee: <code>ActiveDescendantChangedEvent</code>.\nSee: <code>AddAccessibleEvent</code>.\nSee: <code>AnnouncementEvent</code>.\nSee: <code>ApplicationChangedEvent</code>.\nSee: <code>ObjectAttributesChangedEvent</code>.\nSee: <code>DocumentAttributesChangedEvent</code>.\nSee: <code>AvailableEvent</code>.\nSee: <code>BoundsChangedEvent</code>.\nSee: <code>ButtonEvent</code>.\nSee: <code>CacheEvents</code>.\nAll events related to the <code>org.a11y.atspi.Cache</code> interface. …\nSee: <code>CharWidthChangedEvent</code>.\nSee: <code>ChildrenChangedEvent</code>.\nSee: <code>CloseEvent</code>.\nSee: <code>ColumnCountChangedEvent</code>.\nSee: <code>ColumnDeletedEvent</code>.\nSee: <code>ColumnInsertedEvent</code>.\nSee: <code>ColumnReorderedEvent</code>.\nSee: <code>ContentChangedEvent</code>.\nSee: <code>CreateEvent</code>.\nSee: <code>DeactivateEvent</code>.\nSee: <code>EventListenerDeregisteredEvent</code>.\nSee: <code>DesktopCreateEvent</code>.\nSee: <code>DesktopDestroyEvent</code>.\nSee: <code>DestroyEvent</code>.\nSee: <code>DocumentEvents</code>.\nEncapsulates the various different accessibility bus …\nThe events that can be emitted by the registry daemon. …\nSee: <code>FocusEvents</code>.\nSee: <code>FocusEvent</code>.\nSee: <code>KeyboardEvents</code>.\nSee: <code>LegacyAddAccessibleEvent</code>.\nSee: <code>LineChangedEvent</code>.\nSee: <code>LineCountChangedEvent</code>.\nSee: <code>LinkSelectedEvent</code>.\nSee: <code>EventListenerEvents</code>.\nSee: <code>LoadCompleteEvent</code>.\nSee: <code>LoadStoppedEvent</code>.\nSee: <code>LowerEvent</code>.\nSee: <code>MaximizeEvent</code>.\nSee: <code>MinimizeEvent</code>.\nSee: <code>ModelChangedEvent</code>.\nSee: <code>ModifiersEvent</code>.\nSee: <code>MouseEvents</code>.\nSee: <code>MoveEvent</code>.\nSee: <code>ObjectEvents</code>.\nSee: <code>PageChangedEvent</code>.\nSee: <code>ObjectPropertyChangeEvent</code>.\nSee: <code>WindowPropertyChangeEvent</code>.\nSee: <code>RaiseEvent</code>.\nSee: <code>EventListenerRegisteredEvent</code>.\nSee: <code>RelEvent</code>.\nSee: <code>ReloadEvent</code>.\nSee: <code>RemoveAccessibleEvent</code>.\nSee: <code>ReparentEvent</code>.\nSee: <code>ResizeEvent</code>.\nSee: <code>RestoreEvent</code>.\nSee: <code>RestyleEvent</code>.\nSee: <code>RowDeletedEvent</code>.\nSee: <code>RowInsertedEvent</code>.\nSee: <code>RowReorderedEvent</code>.\nSee: <code>SelectionChangedEvent</code>.\nSee: <code>ShadeEvent</code>.\nSee: <code>StateChangedEvent</code>.\nSee: <code>TerminalEvents</code>.\nAll events related to the <code>org.a11y.atspi.Event.Terminal</code> …\nSee: <code>TextAttributesChangedEvent</code>.\nSee: <code>TextBoundsChangedEvent</code>.\nSee: <code>TextCaretMovedEvent</code>.\nSee: <code>TextChangedEvent</code>.\nSee: <code>TextSelectionChangedEvent</code>.\nSee: <code>UUshadeEvent</code>.\nSee: <code>VisibleDataChangedEvent</code>.\nSee: <code>WindowEvents</code>.\nAll events on the <code>org.a11y.atspi.Event.Window</code> interface.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe <code>crate::ObjectRef</code> which the event applies to.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe <code>crate::ObjectRef</code> which the event applies to.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nA child of an <code>crate::ObjectRef</code> has been added or removed.\nA column has been removed from a table.\nA column has been added to a table.\nA column has been re-ordered within a table.\nAny accessibility related property on an <code>crate::ObjectRef</code>. …\nThe <code>org.a11y.atspi.Event.Object:PropertyChange</code> event.\nA row has been deleted from a table.\nA row has been added to a table.\nA row has been moved within a table.\nA state of an object has been modified. A <code>State</code> can be …\nSignal that some attributes about the text (usually …\nThe caret of the user also known as a cursor (not to be …\nText has changed within an <code>crate::ObjectRef</code>.\nA reference to the new child.\nWhether the state was enabled or disabled.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nIndex to remove from/add to.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe table which has had a row inserted.\nThe table which has had a row re-ordered.\nThe table which has had a row removed.\nThe table which has had a column inserted.\nThe table which has had a column re-ordered.\nThe table which has had a column removed.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe object on which the caret has been moved on.\nlength of the insertion/deletion\nPoliteness level.\nThe <code>crate::Operation</code> being performed.\nThe <code>crate::Operation</code> being performed.\nNew position of the caret.\nstarting index of the insertion/deletion\nThe state to be enabled/disabled.\nText of the announcement.\nthe text being inserted/deleted\nAn event that is emitted by the registry daemon, to inform …\nAn event that is emitted by the regostry daemon to signal …\nSignal type emitted by <code>EventListenerRegistered</code> and …\nA list of events that have been deregistered via the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>ObjectRef</code> the event applies to.\nThe <code>ObjectRef</code> the event applies to.\nA list of events that have been registered via the …\nThis module contains the event that is emitted by the …\nAn event that is emitted when the registry daemon has …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe emitting <code>ObjectRef</code>.\nThe <code>ObjectRef</code> for the Registry’s root object.\nThe width of a terminal emulator has changed sufficiently …\nThe width of a terminal emulator has changed sufficiently …\nA line of text has been changed.\nThe height of a terminal emulator has changed sufficiently …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nWhat is the body type of this event.\nA static interface string for <code>DBus</code>. This should usually be …\nThe event’s <code>DBus</code> member.\nThe <code>DBus</code> interface name for an event - or a wrapper type. …\nA static <code>DBus</code> match rule string. This should usually be a …\nThe <code>DBus</code> member for the event. For example, for an …\nA ‘alias’-trait that combines all the <code>DBus</code> related …\n<code>EventProperties</code> allows access to the internals of an …\nDescribes properties of a specific event <em>type</em>.\nA static match rule string for <code>DBus</code>.\nA registry event string for registering for event …\nA static <code>Registry</code> event string for registering with the …\nThe body of the object.\nBuild an event from a <code>zbus::Message</code> reference. This …\nBuild an event from an <code>ObjectRef</code> and <code>Self::Body</code>. This …\nConvert a <code>zbus::Message</code> into this event type. Does all the …\nValidate the body signature against the <code>zvariant::Signature</code>…\nValidate the interface string via …\nValidate the member string via …\nA window has been closed.\nA new window has been created.\nA new virtual desktop has been created.\nA virtual desktop has been deleted.\nThe window has been maximized.\nThe window has been minimized.\nA window has been resized.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe application which has been minimized.\nThe application which has been maximized.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe application which has been closed.\nAn application to query for additional events from.\nThe <code>crate::ObjectRef</code> which the event applies to.\nA reference to a new desktop\nA reference to the destroyed desktop.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe application which has been resized.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nThe <code>crate::ObjectRef</code> which the event applies to.\nReturns a customizable builder for this proxy.\nGet the cached value of the <code>EndIndex</code> property, or <code>None</code> if …\nGet the cached value of the <code>Nanchors</code> property, or <code>None</code> if …\nGet the cached value of the <code>StartIndex</code> property, or <code>None</code> …\n<code>EndIndex</code> property\nReturns the argument unchanged.\n<code>GetObject</code> method\n<code>GetURI</code> method\nThe reference to the underlying <code>zbus::Proxy</code>.\nThe mutable reference to the underlying <code>zbus::Proxy</code>.\nCalls <code>U::from(self)</code>.\nConsumes <code>self</code>, returning the underlying <code>zbus::Proxy</code>.\n<code>IsValid</code> method\n<code>NAnchors</code> property\nCreates a new proxy with the default service and path.\nCreate a stream for the <code>EndIndex</code> property changes. This is …\nCreate a stream for the <code>Nanchors</code> property changes. This is …\nCreate a stream for the <code>StartIndex</code> property changes. This …\n<code>StartIndex</code> property\nReturns a customizable builder for this proxy.\nReturns the argument unchanged.\n<code>GetLink</code> method\n<code>GetLinkIndex</code> method\n<code>GetNLinks</code> method\nThe reference to the underlying <code>zbus::Proxy</code>.\nThe mutable reference to the underlying <code>zbus::Proxy</code>.\nCalls <code>U::from(self)</code>.\nConsumes <code>self</code>, returning the underlying <code>zbus::Proxy</code>.\nCreates a new proxy with the default service and path.\nReturns a customizable builder for this proxy.\nGet the cached value of the <code>ImageDescription</code> property, or …\nGet the cached value of the <code>ImageLocale</code> property, or <code>None</code> …\nReturns the argument unchanged.\n<code>GetImageExtents</code> method\n<code>GetImagePosition</code> method\n<code>GetImageSize</code> method\n<code>ImageDescription</code> property\n<code>ImageLocale</code> property\nThe reference to the underlying <code>zbus::Proxy</code>.\nThe mutable reference to the underlying <code>zbus::Proxy</code>.\nCalls <code>U::from(self)</code>.\nConsumes <code>self</code>, returning the underlying <code>zbus::Proxy</code>.\nCreates a new proxy with the default service and path.\nCreate a stream for the <code>ImageDescription</code> property changes. …\nCreate a stream for the <code>ImageLocale</code> property changes. This …\nAn object for safe conversion to the related interface …\nAcquire the other interface proxies an object may have …\nGet the <code>Action</code> interface proxy.\nGet the <code>Application</code> interface proxy.\nGet the <code>Cache</code> interface proxy.\nGet the <code>Collection</code> interface proxy.\nGet the <code>Component</code> interface proxy.\nGet the <code>Document</code> interface proxy.\nGet the <code>EditableText</code> interface proxy.\nReturns the argument unchanged.\nGet the <code>Hyperlink</code> interface proxy.\nGet the <code>Hypertext</code> interface proxy.\nGet the <code>Image</code> interface proxy.\nCalls <code>U::from(self)</code>.\nGet <code>Proxies</code> for the current object.\nGet the <code>Registry</code> interface proxy.\nGet the <code>Table</code> interface proxy.\nGet the <code>TableCell</code> interface proxy.\nGet the <code>Text</code> interface proxy.\nGet the <code>Value</code> interface proxy.\nReturns a customizable builder for this proxy.\n<code>DeregisterEvent</code> method\nReturns the argument unchanged.\nThe reference to the underlying <code>zbus::Proxy</code>.\nThe mutable reference to the underlying <code>zbus::Proxy</code>.\nCalls <code>U::from(self)</code>.\nConsumes <code>self</code>, returning the underlying <code>zbus::Proxy</code>.\nCreates a new proxy with the default service and path.\n<code>RegisterEvent</code> method\n<code>GetRegisteredEvents</code> method\nReturns a customizable builder for this proxy.\nGet the cached value of the <code>NselectedChildren</code> property, or …\n<code>ClearSelection</code> method\n<code>DeselectChild</code> method\n<code>DeselectSelectedChild</code> method\nReturns the argument unchanged.\n<code>GetSelectedChild</code> method\nThe reference to the underlying <code>zbus::Proxy</code>.\nThe mutable reference to the underlying <code>zbus::Proxy</code>.\nCalls <code>U::from(self)</code>.\nConsumes <code>self</code>, returning the underlying <code>zbus::Proxy</code>.\n<code>IsChildSelected</code> method\nCreates a new proxy with the default service and path.\n<code>NSelectedChildren</code> property\nCreate a stream for the <code>NselectedChildren</code> property …\n<code>SelectAll</code> method\n<code>SelectChild</code> method\nReturns a customizable builder for this proxy.\n@plug: a string for the unique bus name of the …\nThis method is called by a socket to inform the plug that …\nReturns the argument unchanged.\nThe reference to the underlying <code>zbus::Proxy</code>.\nThe mutable reference to the underlying <code>zbus::Proxy</code>.\nCalls <code>U::from(self)</code>.\nConsumes <code>self</code>, returning the underlying <code>zbus::Proxy</code>.\nCreates a new proxy with the default service and path.\nUnembed method @plug: a string for the unique bus name of …\n<code>AddColumnSelection</code> method\n<code>AddRowSelection</code> method\nReturns a customizable builder for this proxy.\nGet the cached value of the <code>Caption</code> property, or <code>None</code> if …\nGet the cached value of the <code>Ncolumns</code> property, or <code>None</code> if …\nGet the cached value of the <code>Nrows</code> property, or <code>None</code> if the …\nGet the cached value of the <code>NselectedColumns</code> property, or …\nGet the cached value of the <code>NselectedRows</code> property, or <code>None</code>…\nGet the cached value of the <code>Summary</code> property, or <code>None</code> if …\n<code>Caption</code> property\nReturns the argument unchanged.\n<code>GetAccessibleAt</code> method\n<code>GetColumnAtIndex</code> method\n<code>GetColumnDescription</code> method\n<code>GetColumnExtentAt</code> method\n<code>GetColumnHeader</code> method\n<code>GetIndexAt</code> method\n<code>GetRowAtIndex</code> method\n<code>GetRowColumnExtentsAtIndex</code> method\n<code>GetRowDescription</code> method\n<code>GetRowExtentAt</code> method\n<code>GetRowHeader</code> method\n<code>GetSelectedColumns</code> method\n<code>GetSelectedRows</code> method\nThe reference to the underlying <code>zbus::Proxy</code>.\nThe mutable reference to the underlying <code>zbus::Proxy</code>.\nCalls <code>U::from(self)</code>.\nConsumes <code>self</code>, returning the underlying <code>zbus::Proxy</code>.\n<code>IsColumnSelected</code> method\n<code>IsRowSelected</code> method\n<code>IsSelected</code> method\n<code>NColumns</code> property\nCreates a new proxy with the default service and path.\n<code>NRows</code> property\n<code>NSelectedColumns</code> property\n<code>NSelectedRows</code> property\nCreate a stream for the <code>Caption</code> property changes. This is …\nCreate a stream for the <code>Ncolumns</code> property changes. This is …\nCreate a stream for the <code>Nrows</code> property changes. This is a …\nCreate a stream for the <code>NselectedColumns</code> property changes. …\nCreate a stream for the <code>NselectedRows</code> property changes. …\nCreate a stream for the <code>Summary</code> property changes. This is …\n<code>RemoveColumnSelection</code> method\n<code>RemoveRowSelection</code> method\n<code>Summary</code> property\nReturns a customizable builder for this proxy.\nGet the cached value of the <code>ColumnSpan</code> property, or <code>None</code> …\nGet the cached value of the <code>Position</code> property, or <code>None</code> if …\nGet the cached value of the <code>RowSpan</code> property, or <code>None</code> if …\nGet the cached value of the <code>Table</code> property, or <code>None</code> if the …\n<code>ColumnSpan</code> property\nReturns the argument unchanged.\n<code>GetColumnHeaderCells</code> method\n<code>GetRowColumnSpan</code> method\n<code>GetRowHeaderCells</code> method\nThe reference to the underlying <code>zbus::Proxy</code>.\nThe mutable reference to the underlying <code>zbus::Proxy</code>.\nCalls <code>U::from(self)</code>.\nConsumes <code>self</code>, returning the underlying <code>zbus::Proxy</code>.\nCreates a new proxy with the default service and path.\n<code>Position</code> property\nCreate a stream for the <code>ColumnSpan</code> property changes. This …\nCreate a stream for the <code>Position</code> property changes. This is …\nCreate a stream for the <code>RowSpan</code> property changes. This is …\nCreate a stream for the <code>Table</code> property changes. This is a …\n<code>RowSpan</code> property\n<code>Table</code> property\n<code>AddSelection</code> method\nReturns a customizable builder for this proxy.\nGet the cached value of the <code>CaretOffset</code> property, or <code>None</code> …\nGet the cached value of the <code>CharacterCount</code> property, or …\n<code>CaretOffset</code> property\n<code>CharacterCount</code> property\nReturns the argument unchanged.\n<code>GetAttributeRun</code> method\n<code>GetAttributeValue</code> method\n<code>GetAttributes</code> method\n<code>GetBoundedRanges</code> method\n<code>GetCharacterAtOffset</code> method\n<code>GetCharacterExtents</code> method\n<code>GetDefaultAttributeSet</code> method\n<code>GetDefaultAttributes</code> method\n<code>GetNSelections</code> method\n<code>GetOffsetAtPoint</code> method\n<code>GetRangeExtents</code> method\n<code>GetSelection</code> method\n<code>GetStringAtOffset</code> method\n<code>GetText</code> method\n<code>GetTextAfterOffset</code> method\n<code>GetTextAtOffset</code> method\n<code>GetTextBeforeOffset</code> method\nThe reference to the underlying <code>zbus::Proxy</code>.\nThe mutable reference to the underlying <code>zbus::Proxy</code>.\nCalls <code>U::from(self)</code>.\nConsumes <code>self</code>, returning the underlying <code>zbus::Proxy</code>.\nCreates a new proxy with the default service and path.\nCreate a stream for the <code>CaretOffset</code> property changes. This …\nCreate a stream for the <code>CharacterCount</code> property changes. …\n<code>RemoveSelection</code> method\n<code>ScrollSubstringTo</code> method\n<code>ScrollSubstringToPoint</code> method\n<code>SetCaretOffset</code> method\n<code>SetSelection</code> method\nReturns a customizable builder for this proxy.\nGet the cached value of the <code>CurrentValue</code> property, or <code>None</code> …\nGet the cached value of the <code>MaximumValue</code> property, or <code>None</code> …\nGet the cached value of the <code>MinimumIncrement</code> property, or …\nGet the cached value of the <code>MinimumValue</code> property, or <code>None</code> …\nGet the cached value of the <code>Text</code> property, or <code>None</code> if the …\n<code>CurrentValue</code> property\nReturns the argument unchanged.\nThe reference to the underlying <code>zbus::Proxy</code>.\nThe mutable reference to the underlying <code>zbus::Proxy</code>.\nCalls <code>U::from(self)</code>.\nConsumes <code>self</code>, returning the underlying <code>zbus::Proxy</code>.\n<code>MaximumValue</code> property\n<code>MinimumIncrement</code> property\n<code>MinimumValue</code> property\nCreates a new proxy with the default service and path.\nCreate a stream for the <code>CurrentValue</code> property changes. …\nCreate a stream for the <code>MaximumValue</code> property changes. …\nCreate a stream for the <code>MinimumIncrement</code> property changes. …\nCreate a stream for the <code>MinimumValue</code> property changes. …\nCreate a stream for the <code>Text</code> property changes. This is a …\nSet <code>CurrentValue</code> property\n<code>Text</code> property")