searchState.loadedDescShard("odilia_common", 0, "A struct which represents the bare minimum of an …\nReturns the argument unchanged.\nTurns any <code>atspi::event</code> type into an <code>AccessiblePrimitive</code>, …\nThe accessible ID, which is an arbitrary string specified …\nCalls <code>U::from(self)</code>.\nConvert into an <code>atspi::proxy::accessible::AccessibleProxy</code>. …\nAssuming that the sender is “:x.y”, this stores the …\nAuto-generated discriminant enum variants\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nFallibly returns an iterator of <code>OdiliaCommand</code>s to run.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis item is already in the cache.\nThe cache operation succeeded, but the cache is in an …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nUnimplemented.\nChange mode of the screen reader. This is currently …\nChange mode of the screen reader. This is currently …\nDisable a feature.\nDisable a feature.\nEnable a feature.\nEnable a feature.\nA list of features supported natively by Odilia.\nQuit the screen reader.\nQuit the screen reader.\nEvents which can be trigged through Odilia’s external …\nAuto-generated discriminant enum variants\nUnimplemented, but will eventually stop all speech until …\nStop all current speech.\nStop all current speech.\nNavigate to the next <code>Role</code> in <code>Direction</code> by depth-first …\nNavigate to the next <code>Role</code> in <code>Direction</code> by depth-first …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nContains the error value\nContains the success value\ntype representing a <em>read-only</em> view of the odilia …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\na file where the log messages should be written the path …\nstructure used for all the configurable options related to …\nthe place where odilia should output its logs\nthe logs are sent to systemd-journald, as long as the …\nlogs are being sent to the terminal directly\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nthe logging level this session should output at see the …\nthe place where odilia should output its logs the values …\nstructure for all the speech related configuration options …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")