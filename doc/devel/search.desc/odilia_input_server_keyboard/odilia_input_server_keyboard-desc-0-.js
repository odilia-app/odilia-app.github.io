searchState.loadedDescShard("odilia_input_server_keyboard", 0, "<code>odilia-input-server-keyboard</code>\nThe fixed activation key for all keybindings.\nAttempted to add the <code>ACTIVATION_KEY</code>.\nAttempted to add a key twice.\nAn error in creating a set of key combos.\nA set of key combos and their associated action.\nA list of modes and their associated key combos.\nAn existing combo has the same set of keys assigned to it.\nAn identical combo has already been set. This happens if …\nA set of keys to be used as the combination for a binding.\nAn error in creating (or modifying) a <code>KeySet</code>.\nAn existing combo has the same prefix.\nA combo with the same prefix has already been set. This …\nAn error in adding a new set of keybindings to the …\nThe primary holder of state for all keybindings in the …\nAttempted to add a combo with an empty set of keys.\nAttempted to add a keybinding with a mode that is not …\nIf the activation key (<code>crate::ACTIVATION_KEY</code>) is pressed.\nThe callback function to call in a tight loop. Returns <code>None</code>…\nList of key combos.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAdd a new key to the set.\nInsert a new <code>KeySet</code>, <code>OdiliaEvent</code> combination.\nAdd a new set of combos.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIterate over the items in <code>ComboSets</code>.\n<code>Iterator</code> through each <code>KeySet</code> contained in the <code>ComboSet</code>.\nWhich mode the screen reader is in.\nCreates a new, empty <code>KeySet</code>.\nCreate a new, empty <code>ComboSet</code>.\nCreate a new, empty <code>ComboSets</code>.\nAll pressed keys <em>after</em> activation is pressed.\nCreate a <code>KeySet</code> from a list of keys.\nCreate a <code>ComboSet</code> from an iterator.\nAttempt to construct from an iterator.\nA synchronous channel to send events to. The receiver will …\nThe combo which was attempted to be added, but failed.\nExisting combo that has the same prefix.\nThe attempted combo to add.\nThe mode, if specified.\nThe mode and keyset which contain the same prefix.\nThe keyset")