searchState.loadedDescShard("tower_iter", 0, "Extensions to Tower aiming at ease of use for sets and …\nA set of types dedicated to running multiple services.\nConverts an <code>Iterator</code> over a set of (S, I) where <code>S</code> is a …\nConverts an <code>Iterator</code> over a set of (S, I) where <code>S</code> is a …\nConverts an iterator of <code>(Left,Right)</code> into an iterator of …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMaps an iterator over <code>(S, I)</code>, where <code>S</code> is a <code>Service</code> and <code>I</code> …\nReverses a 2-tuple’s order.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nUseful for running a set of services with the same …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nUseful for running a set of services with the same …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nUseful for running a set of services with the same …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")