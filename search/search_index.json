{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"The Yggdrasil Screen Reader Project \u00b6 What is Yggdrasil? \u00b6 Accessibility on Linux has historically been under-developed, under-maintained, and, therefore, has gained a reputation for being quite painful to use as a daily driver among disabled people. We want to change that. Yggdrasil is a new project that aims to create a better Linux screen reader, written in Rust . Through this project, we aim to provide a better screen reading experience than the one we currently have in Orca . A screen reader with all the modern features a Windows or macOS user would expect from their computers, including: Object navigation ocr customisable navigation commands a powerful add-on mechanism and more. Why the Name? \u00b6 In viking mythology, yggdrasil is a huge tree around which the nine worlds gravitate. It\u2019s seen as a unifyer of everything, since its roots reach to the center of the earth. It\u2019s so large that parts of it exist in other universes. We believe accessibility should unify people from across the globe to enjoy a product, with disability no longer being an impediment to the person efficiently using it. They should be able to use technology as well as, if not better than a non-disabled individual. Features \u00b6 First-class addon support We want our users to be able to do anything they wish with our screen reader. Improving support for specific programs should ideally be doable without needing to modify yggdrasil\u2019s core code. We plan to make it easy to write addons primarily in Lua , with the option to use other languages such as Rust in the future for higher performance. Flexible input and gesture system Likewise, adding new functionality such as new keyboard commands should be easy enough, without needing to tinker with the source code of the screen reader. Manual editing of the configuration files as well as an intuitive grafical program to modify gestures and define new actions will be available. Modern navigation patterns In a perfect world, apps would just be accessible automatically, However, that\u2019s almost never the case. Therefore, visually impaired people rely on additional tools provided by their screen reader, such as object navigation, a way to explore the accessibility tree of an app without relying on focus, being then able to discover unfocusable elements that have important information nevertheless. We have this in NVDA and other screen readers, but not in Orca and as such, not in linux. Yggdrasil will address that. Under Active Development \u00b6 This website as well as the software itself is under active development, please check back at a later stage to see more exciting news and documentation!","title":"The Yggdrasil Screen Reader Project"},{"location":"#the-yggdrasil-screen-reader-project","text":"","title":"The Yggdrasil Screen Reader Project"},{"location":"#what-is-yggdrasil","text":"Accessibility on Linux has historically been under-developed, under-maintained, and, therefore, has gained a reputation for being quite painful to use as a daily driver among disabled people. We want to change that. Yggdrasil is a new project that aims to create a better Linux screen reader, written in Rust . Through this project, we aim to provide a better screen reading experience than the one we currently have in Orca . A screen reader with all the modern features a Windows or macOS user would expect from their computers, including: Object navigation ocr customisable navigation commands a powerful add-on mechanism and more.","title":"What is Yggdrasil?"},{"location":"#why-the-name","text":"In viking mythology, yggdrasil is a huge tree around which the nine worlds gravitate. It\u2019s seen as a unifyer of everything, since its roots reach to the center of the earth. It\u2019s so large that parts of it exist in other universes. We believe accessibility should unify people from across the globe to enjoy a product, with disability no longer being an impediment to the person efficiently using it. They should be able to use technology as well as, if not better than a non-disabled individual.","title":"Why the Name?"},{"location":"#features","text":"First-class addon support We want our users to be able to do anything they wish with our screen reader. Improving support for specific programs should ideally be doable without needing to modify yggdrasil\u2019s core code. We plan to make it easy to write addons primarily in Lua , with the option to use other languages such as Rust in the future for higher performance. Flexible input and gesture system Likewise, adding new functionality such as new keyboard commands should be easy enough, without needing to tinker with the source code of the screen reader. Manual editing of the configuration files as well as an intuitive grafical program to modify gestures and define new actions will be available. Modern navigation patterns In a perfect world, apps would just be accessible automatically, However, that\u2019s almost never the case. Therefore, visually impaired people rely on additional tools provided by their screen reader, such as object navigation, a way to explore the accessibility tree of an app without relying on focus, being then able to discover unfocusable elements that have important information nevertheless. We have this in NVDA and other screen readers, but not in Orca and as such, not in linux. Yggdrasil will address that.","title":"Features"},{"location":"#under-active-development","text":"This website as well as the software itself is under active development, please check back at a later stage to see more exciting news and documentation!","title":"Under Active Development"}]}