<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>rust on Odilia Screen Reader</title><link>https://odilia.app/tags/rust/</link><description>Recent content in rust on Odilia Screen Reader</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 03 Mar 2024 16:26:57 +0200</lastBuildDate><atom:link href="https://odilia.app/tags/rust/index.xml" rel="self" type="application/rss+xml"/><item><title>Going The Way Of the Notification</title><link>https://odilia.app/news/notifications/</link><pubDate>Sun, 03 Mar 2024 16:26:57 +0200</pubDate><guid>https://odilia.app/news/notifications/</guid><description>ever since the first release, things appeared to be quite stagnant, especially from the outside. This is not an imagination of the public, this is actually true, things were quite stagnant for a while, mostly because a lot of the team was busy with real life situations. However, it appears that we have a bit more time now, so what better way to communicate this than sharing the fun with everyone, as well as, of course, the latest feature we were working on?</description></item><item><title>Enough Prototypes, let's do this for real</title><link>https://odilia.app/news/enough-prototypes/</link><pubDate>Wed, 02 Feb 2022 12:06:49 +0200</pubDate><guid>https://odilia.app/news/enough-prototypes/</guid><description>&lt;p>As of afew days ago, we decided we played enough with the tools and components of the linux accessibility stack to be
able to say that we aren&amp;rsquo;t so ignorant anymore, we know at least the basics about how it all fits together, how our
screenreaders read information from a linux gui app, how the gui toolkit and atspi work together to provide the required
context for such tools to operate.&lt;/p>
&lt;p>Since I don&amp;rsquo;t want to bore you with code snippets, git logs, conversations from who knows how much time ago and so on, I
will quickly give you a rundown of everything we learned during this long, laborious but nevertheless fun and
educational journey&lt;/p></description></item><item><title>Minimal speech-dispatcher Bindings Created</title><link>https://odilia.app/news/minimal-speech-dispatcher-bindings/</link><pubDate>Wed, 22 Sep 2021 15:24:01 +0000</pubDate><guid>https://odilia.app/news/minimal-speech-dispatcher-bindings/</guid><description>&lt;p>As of afew days ago, a &lt;a href="https://github.com/odilia-app/tts_subsystem">minimal binding to speech-dispatcher&lt;/a> (the TTS system for Linux) was created, which
wraps the C functions provided by &lt;a href="https://github.com/ndarilek/speech-dispatcher-sys">Nolan&amp;rsquo;s &lt;code>speech-dispatcher-sys&lt;/code> crate&lt;/a> in a safe Rust API.&lt;/p></description></item></channel></rss>